/* Mixins / Extends
================================================== */

/* Breakpoints -- Comment out if using Bourbon/Neat */
// @mixin breakpoint($point) {
//   @if $point = large {
//     @media (min-width: 1140px) { @content; }
//   }
//   @if $point = medium {
//     @media (min-width: 800px) { @content; }
//   }
//   @if $point = small {
//     @media (min-width: 400px) { @content; }
//   }
// }

// Fonts Families

$regular: 'robotoregular', arial, sans-serif;
$bold: 'robotobold', arial, sans-serif;
$black: 'robotoblack', arial, sans-serif;

$serif: 'georgia', arial, serif;

@mixin font-regular {
    font-family: $regular;
    font-weight: normal;
    text-rendering: optimizeLegibility;
}
@mixin font-bold {
    font-family: $bold;
    font-weight: normal;
    text-rendering: optimizeLegibility;
}
@mixin font-black {
    font-family: $black;
    font-weight: normal;
    text-rendering: optimizeLegibility;
}

@mixin font-serif {
  font-family: $serif;
  font-weight: normal;
}

@mixin font-serif-bold {
  font-family: $serif;
  font-weight: bold;
}

// z-indexes

$z-layers: (
  modal     : 9000,
  overlay   : 8000,
  dropdown  : 7000,
  header    : 6000,
  footer    : 5000
);

@function z($layer) {
  @if not map-has-key($z-layers, $layer) {
    @warn "No layer found for `#{$layer}` in $z-layers map. Property omitted.";
  }
  @return map-get($z-layers, $layer);
}

// Omega Reset -- Uncomment if using Bourbon/Neat

// @mixin omega-reset($nth) {
//   &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
//   &:nth-child(#{$nth}+1) { clear: none }
// }

// Background Images

@mixin background-layout {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
}

// Background Opacity

@mixin background-opacity($color, $opacity: 0.3) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}
